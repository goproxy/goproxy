name: Test
on:
  push:
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go:
          - 1.23.x
          - 1.24.x
          - 1.25.x
    steps:
      - name: Check out code
        uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{matrix.go}}
      - name: Download Go modules
        run: go mod download
      - name: Test Go code
        run: go test -v -race -covermode atomic -coverprofile coverage.out ./...
      - name: Upload code coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          disable_search: true
          files: coverage.out
  test-go-build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.25.x
      - name: Download Go modules
        run: go mod download
      - name: Build Go binary
        env:
          CGO_ENABLED: 0
        run: go build -v -trimpath -ldflags "-s -w" -o bin/ ./cmd/goproxy
  test-docker-build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: goproxy:latest
  test-goreleaser-release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.25.x
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean --snapshot
